openapi: 3.0.0
info:
  title: API профиля пользователя
  version: 1.0.0
  description: API для управления данными профиля пользователя.

paths:
  /signup:
    post:
      summary: 'Создает нового пользователя или ищет существующего пользователя по номеру телефона.'
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: 'JSON объект с номером телефона пользователя.'
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
      responses:
        200:
          description: 'Успешный ответ'
          schema:
            type: object
            properties:
              message:
                type: string
                description: 'Сгенерированный OTP-код. Присутсивует до добавление смс-сервиса'
          examples:
            application/json:
              message: '123456'
        422:
          description: 'Ошибка валидации или другие ошибки'
  /login:
    post:
      summary: 'Авторизует пользователя с помощью номера телефона и OTP-кода.'
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: 'JSON объект с номером телефона и OTP-кодом пользователя.'
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
              code:
                type: string
      responses:
        200:
          description: 'Успешный ответ'
          schema:
            type: object
            properties:
              token:
                type: string
                description: 'Токен доступа'
              refresh_token:
                type: string
                description: 'Токен обновления'
              new_user:
                type: boolean
                description: 'Признак нового пользователя'
          examples:
            application/json:
              token: 'access_token'
              refresh_token: 'refresh_token'
              new_user: true
        401:
          description: 'Ошибка авторизации'
          schema:
            type: object
            properties:
              error:
                type: string
                description: 'Сообщение об ошибке'
          examples:
            application/json:
              error: 'Invalid code'
  /user:
    get:
      summary: Получение данных профиля пользователя
      description: Возвращает информацию о профиле текущего пользователя.
      tags:
        - Профиль пользователя
      responses:
        '200':
          description: Данные профиля успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
    post:
      summary: Обновление данных профиля пользователя
      description: Обновляет информацию о профиле текущего пользователя.
      tags:
        - Профиль пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoUpdate'
      responses:
        '200':
          description: Данные профиля успешно обновлены
        '400':
          description: Некорректный запрос

components:
  schemas:
    UserInfo:
      type: object
      properties:
        user_id:
          type: integer
          description: Идентификатор пользователя
        first_name:
          type: string
          description: Имя пользователя
        country:
          type: string
          description: Страна пользователя
        city:
          type: string
          description: Город пользователя
        birthday:
          type: string
          format: date
          description: Дата рождения пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        verified_email:
          type: boolean
          description: Флаг подтверждения email
      required:
        - user_id
        - first_name
        - country
        - city
        - birthday
        - email
        - verified_email

    UserInfoUpdate:
      type: object
      properties:
        first_name:
          type: string
          description: Имя пользователя
        country:
          type: string
          description: Страна пользователя
        city:
          type: string
          description: Город пользователя
        birthday:
          type: string
          format: date
          description: Дата рождения пользователя
        email:
          type: string
          format: email
          description: Email пользователя
