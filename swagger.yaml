openapi: 3.0.0
info:
  title: API Мобильного приложения
  version: 1.0.0
  description: API Мобильного приложения
paths:
  /signup:
    post:
      summary: Создает нового пользователя или ищет существующего пользователя по номеру телефона.
      description: Возвращает одноразовый код
      tags:
        - Регистрация и авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
            examples:
              example1:
                value:
                  phone_number: '1234567890'
      responses:
        '200':
          description: 'Успешный ответ'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 'Сгенерированный OTP-код. Присутствует до добавления смс-сервиса'

            examples:
              example1:
                value:
                  message: '123456'

        '422':
          description: 'Ошибка валидации или другие ошибки'
  /login:
    post:
      summary: Авторизует пользователя с помощью номера телефона и OTP-кода.
      description: Возвращает заголовки с токенами доступа и обновления
      tags:
        - Аутентификация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                code:
                  type: string
            examples:
              example1:
                value:
                  phone_number: '1234567890'
                  code: '123456'
      responses:
        '200':
          description: 'Успешный ответ'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: 'Токен доступа'
                  new_user:
                    type: boolean
                    description: 'Признак нового пользователя'
            examples:
              example1:
                value:
                  token: 'access_token'
                  new_user: true
        '401':
          description: 'Ошибка авторизации'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                example1:
                  value:
                    error: 'Invalid code'
  /logout:
    post:
      summary: Выход из системы.
      description: Добавляет токены пользователя в черный список
      tags:
        - Аутентификация

      responses:
        '200':
          description: 'Успешный ответ'
      security:
        - BearerAuth: [ ]
  /users:
    get:
      summary: Получение данных профиля пользователя
      description: Возвращает информацию о профиле текущего пользователя.
      tags:
        - Профиль пользователя
      responses:
        '200':
          description: Данные профиля успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            examples:
              example1:
                value:
                  user_id: 123
                  first_name: 'John'
                  country: 'USA'
                  city: 'New York'
                  birthday: '1990-01-01'
                  email: 'john@example.com'
                  verified_email: true
    post:
      summary: Установка данных профиля пользователя
      description: Создает информацию о профиле текущего пользователя.
      tags:
        - Профиль пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoUpdate'
            examples:
              example1:
                value:
                  first_name: 'Jane'
                  country: 'Canada'
                  city: 'Toronto'
                  birthday: '1995-02-15'
                  email: 'jane@example.com'
      responses:
        '200':
          description: Данные профиля успешно созданы
        '400':
          description: Некорректный запрос
    put:
      summary: Обновление данных профиля пользователя
      description: Обновляет информацию о профиле текущего пользователя.
      tags:
        - Профиль пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoUpdate'
            examples:
              example1:
                value:
                  first_name: 'Jane'
                  country: 'Canada'
                  city: 'Toronto'
                  birthday: '1995-02-15'
                  email: 'jane@example.com'
      responses:
        '200':
          description: Данные профиля успешно обновлены
        '400':
          description: Некорректный запрос
    security:
      - BearerAuth: []
  /users/addresses/{:delivery_type}:
    get:
      summary: Получения адресов пользователя для доставки по разным типам
      description:  Доступные типы 'post' - почта, 'courier' - курьер, 'service' - служба доставки
      tags:
        - Профиль пользователя
      parameters:
        - name: Authorization
          in: header
          description: Токен авторизации пользователя
          required: true
          type: string
          example: 'Bearer token'
      responses:
        200:
          description: Успешный запрос
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                delivery_type:
                  type: string
                country:
                  type: string
                city:
                  type: string
                street:
                  type: string
                house:
                  type: string
                apartment:
                  type: string
                zip_code:
                  type: string
        401:
          description: Неавторизованный доступ
        422:
          description: Некорректный запрос
  /users/addresses/:
    post:
      tags:
        - Профиль пользователя
      summary: Создать адрес пользователя
      parameters:
        - name: Authorization
          in: header
          description: Токен авторизации пользователя
          required: true
          type: string
        - name: delivery_type
          in: formData
          description: Тип доставки (например, "post", "courier", "service")
          required: true
          type: string
        - name: country
          in: formData
          description: Название страны
          required: true
          type: string
        - name: city
          in: formData
          description: Название города
          required: true
          type: string
        - name: street
          in: formData
          description: Название улицы
          required: true
          type: string
        - name: house
          in: formData
          description: Номер дома
          required: true
          type: string
        - name: apartment
          in: formData
          description: Номер квартиры
          required: true
          type: string
        - name: zip_code
          in: formData
          description: Почтовый индекс. нужен только если delivery_type == 'post'
          required: true
          type: string
      responses:
        200:
          description: Успешный запрос
          schema:
            type: object
            properties:
              id:
                type: integer
              delivery_type:
                type: string
              country:
                type: string
              city:
                type: string
              street:
                type: string
              house:
                type: string
              apartment:
                type: string
              zip_code:
                type: string
        401:
          description: Неавторизованный доступ
        422:
          description: Некорректный запрос
  /users/addresses/{address_id}:
    delete:
      tags:
        - Профиль пользователя
      summary: Удалить адрес пользователя
      parameters:
        - name: Authorization
          in: header
          description: Токен авторизации пользователя
          required: true
          type: string
        - name: address_id
          in: path
          description: Идентификатор адреса для удаления
          required: true
          type: integer
      responses:
        200:
          description: Успешное удаление адреса
        401:
          description: Неавторизованный доступ
        404:
          description: Адрес не найден
        500:
          description: Внутренняя ошибка сервера
  /events:
    tags:
      - Акции
    get:
      summary: Получение данных о акция
      description: Возвращает информацию о всех доступных акция и их товарах. Ограничение на отображение 4х товаров на акцию
      tags:
        - Акции
      responses:
        '200':
          description: Данные об акциях успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventProducts'
  /events/{event_id}:
    get:
      summary: Получение данных о товарах акции
      description: Возвращает информацию о всех доступных товарах акции
      tags:
        - Акции
      responses:
        '200':
          description: Данные о товарах акциии успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_page:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 5
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
  /banners:
    get:
      summary: Получение данных о баннерах
      description: Возвращает информацию о всех доступных баннерах
      tags:
        - Баннеры
      responses:
        '200':
          description: Данные о баннерах успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
  /categories:
    get:
      summary: Получение данных о категориях
      description: Возвращает информацию о всех доступных категориях
      tags:
        - Категории товаров
      responses:
        '200':
          description: Данные профиля успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/{category_id}:
    get:
      summary: Получение данных о товарах в категориях
      description: Возвращает данные о товарах в категории
      parameters:
        - name: product_id
          in: path
          description: Идентификатор категории
          required: true
          schema:
            type: integer
          example: 1
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
          example: 1
        - name: per_page
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
          example: 10
      tags:
        - Категории товаров
      responses:
        '200':
          description: Данные о категории успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_page:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 5
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
  /products/{product_id}:
    get:
      tags:
        - Информация о товаре
      summary: Полная информация о товаре
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/colors:
    get:
      tags:
        - Информация о товаре
      summary: Получение цветов товара и размеры
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ColorCard'

  /products/{product_id}/review_infos:
    get:
      tags:
        - Информация о товаре
      summary: Информация об отзывах о товаре
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
  /products/{product_id}/reviews:
    get:
      tags:
        - Информация о товаре
      summary: Получение отзывов о продукте
      description: Возвращает список отзывов о продукте по его идентификатору
      parameters:
        - name: product_id
          in: path
          description: Идентификатор продукта
          required: true
          schema:
            type: integer
          example: 1
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
          example: 1
        - name: per_page
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_page:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 5
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
    post:
      tags:
        - Информация о товаре
      summary: Создание нового отзыва
      description: Создает новый отзыв о продукте.
      parameters:
        - name: product_id
          in: path
          description: Идентификатор продукта
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        description: Данные нового отзыва
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Текст отзыва
                rating:
                  type: integer
                  description: Рейтинг товара (обязательное поле)
                photos:
                  type: array
                  items:
                    type: string
                    example: 'File Object'
                    description: Загружаемое фото
      responses:
        '201':
          description: Отзыв успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '422':
          description: Неверный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Описание ошибки
  /products/{product_id}/viewed:
    get:
      tags:
        - Информация о товаре
      summary: Получить просмотренные товары
      description: Возвращает список товаров, которые пользователь просматривал. Исключает из списка продукт который сейчас просматривает пользователь
      parameters:
        - name: product_id
          in: path
          description: Идентификатор продукта
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Неавторизованный запрос
  /viewed:
    get:
      tags:
        - Просмотренные товары
      summary: Получить просмотренные товары
      description: Возвращает список товаров, которые пользователь просматривал.
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Неавторизованный запрос

  /favourites:
    get:
      summary: 'Получить избранные товары'
      tags:
        - Избранные товары
      description: 'Возвращает список избранных товаров.'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_page:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 5
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
    post:
      summary: 'Добавить товар в избранное'
      tags:
        - Избранные товары
      description: 'Добавление товара в избранное'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
            examples:
              example1:
                value:
                  product_id: '1'
      responses:
        '201':
          description: 'Успешный ответ'
    delete:
      tags:
        - Избранные товары
      summary: "Удалить из избранного"
      description: "Удалить из избранного с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: product_id
          in: path
          description: "Идентификатор товара"
          required: true
          type: integer
          example: '1'
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
      responses:
        200:
          description: "Товар успешно удален"
          schema:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Favorite deleted"
        401:
          description: "Неавторизованный доступ"
  /carts:
    get:
      tags:
        - Корзина товаров
      summary: "Получить корзину пользователя"
      description: "Получить корзину пользователя с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
      responses:
        200:
          description: "Успешный ответ"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        401:
          description: "Неавторизованный доступ"
    post:
      tags:
        - Корзина товаров
      summary: "Добавить товар в корзину"
      description: "Добавить товар в корзину пользователя с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
        - name: product_id
          in: formData
          description: "Идентификатор товара"
          required: true
          type: integer
          example: '1'
        - name: color_id
          in: formData
          description: "Идентификатор цвета"
          required: true
          type: integer
          example: '1'
        - name: size_id
          in: formData
          description: "Идентификатор размера"
          required: true
          type: integer
          example: '1'
        - name: quantity
          in: formData
          description: "Количество товара"
          required: true
          type: integer
          example: '1'
      responses:
        201:
          description: "Товар успешно добавлен в корзину"
        401:
          description: "Неавторизованный доступ"

  /carts/{cart_id}:
    put:
      tags:
        - Корзина товаров
      summary: "Обновить количество товара в корзине"
      description: "Изменить количество товара в корзине пользователя с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: "Идентификатор корзины"
          required: true
          type: integer
          example: '1'
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
        - name: quantity
          in: formData
          description: "Новое количество товара"
          required: true
          type: integer
          example: '2'
      responses:
        200:
          description: "Успешное обновление"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        401:
          description: "Неавторизованный доступ"
    delete:
      tags:
        - Корзина товаров
      summary: "Удалить корзину"
      description: "Удалить корзину пользователя с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: cart_id
          in: path
          description: "Идентификатор корзины"
          required: true
          type: integer
          example: '1'
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
      responses:
        200:
          description: "Корзина успешно удалена"
          schema:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      example: "Cart deleted"
        401:
          description: "Неавторизованный доступ"
  /shop_addresses:
    get:
      tags:
        - Магазины
      summary: "Получить список адресов магазинов"
      description: "Получить список адресов магазинов с использованием авторизации."
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: "Bearer-токен для аутентификации пользователя."
          required: true
          type: string
          example: 'Bearer token'
      responses:
        200:
          description: "Успешно"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopAddress'
        401:
          description: "Неавторизованный доступ"
  /search:
    get:
      tags:
        - Поиск
      summary: Поиск товаров и категорий
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Токен авторизации пользователя
          required: true
          type: string
        - name: text
          in: formData
          description: Текст для поиска
          required: true
          type: string
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  per_page:
                    type: integer
                    example: 10
                  page:
                    type: integer
                    example: 1
                  total_pages:
                    type: integer
                    example: 5
                  items:
                    $ref: '#/components/schemas/SearchResult'
        401:
          description: Неавторизованный доступ
        500:
          description: Внутренняя ошибка сервера
components:
  schemas:
    FavoriteResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CardProduct'
        viewed_products:
          type: array
          items:
            $ref: '#/components/schemas/CardProduct'
    Product:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор товара
        name:
          type: string
          description: Наименование товара
        price:
          type: string
          description: Цена товара
        old_price:
          type: string
          description: Старая цена товара
        sizes:
          type: array
          description: Размеры товара (массив)
          items:
            $ref: '#/components/schemas/Size'
        photos:
          type: array
          description: Фотографии товара (массив)
          items:
            $ref: '#/components/schemas/ProductPhoto'
        current_color:
          type: object
          description: Текущий цвет товара
          properties:
            id:
              type: string
              description: Идентификатор цвета
            color:
              type: string
              description: Цвет товара
        colors:
          type: array
          description: Доступные цвета товара (массив)
          items:
            type: object
            properties:
              id:
                type: string
                description: Идентификатор цвета
              color:
                type: string
                description: Цвет товара
        description:
          type: string
          description: Описание товара
        article:
          type: string
          description: Артикул товара
        season:
          type: string
          description: Сезон товара
        events:
          type: array
          description: список акций в которые входит товар
          items:
            $ref: '#/components/schemas/Events'
        favorite:
          type: boolean
          description: Находится ли товар в избранном
        cart:
          type: boolean
          description: Находится ли товар в корзине
    CardProduct:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        old_price:
          type: number
        colors:
          type: array
          items:
            $ref: '#/components/schemas/CardColor'
    CardColor:
      type: object
      properties:
        id:
          type: integer
        color:
          type: string
        photos:
          type: array
          items:
            $ref: '#/components/schemas/ProductPhoto'
    Color:
      type: object
      properties:
        id:
          type: integer
        color:
          type: string
        sizes:
          type: array
          items:
            $ref: '#/components/schemas/Size'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/ProductPhoto'
    Size:
      type: object
      properties:
        id:
          type: integer
        size:
          type: integer
    ProductPhoto:
      type: object
      properties:
        thumb:
          type: string
        small_thumb:
          type: string
        original:
          type: string
    UserInfo:
      type: object
      properties:
        user_id:
          type: integer
          description: Идентификатор пользователя
        first_name:
          type: string
          description: Имя пользователя
        country:
          type: string
          description: Страна пользователя
        city:
          type: string
          description: Город пользователя
        birthday:
          type: string
          format: date
          description: Дата рождения пользователя
        email:
          type: string
          format: email
          description: Email пользователя
        verified_email:
          type: boolean
          description: Флаг подтверждения email
      required:
        - user_id
        - first_name
        - country
        - city
        - birthday
        - email
        - verified_email

    UserInfoUpdate:
      type: object
      properties:
        first_name:
          type: string
          description: Имя пользователя
        country:
          type: string
          description: Страна пользователя
        city:
          type: string
          description: Город пользователя
        birthday:
          type: string
          format: date
          description: Дата рождения пользователя
        email:
          type: string
          format: email
          description: Email пользователя
    Category:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          image:
            type: string
    ReviewResponse:
      type: object
      properties:
        average_rating:
          type: number
          description: Средний рейтинг
          example: 4.5
        count:
          type: integer
          description: Количество отзывов
          example: 42
        photos:
          type: array
          items:
            $ref: '#/components/schemas/ReviewPhoto'

    ReviewPhoto:
      type: object
      properties:
        thumb:
          type: string
          description: URL миниатюры фотографии
        small_thumb:
          type: string
          description: URL небольшой миниатюры фотографии
        original:
          type: string
          description: URL оригинальной фотографии
    Review:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор отзыва
        rating:
          type: integer
          description: Рейтинг
        text:
          type: string
          description: Текст отзыва
        created_at:
          type: string
          description: Дата создания отзыва
        user:
          type: string
          description: Имя пользователя
        photos:
          type: array
          items:
            $ref: '#/components/schemas/ReviewPhoto'

    CartItem:
      type: object
      properties:
        id:
          type: integer
          description: Идентификатор товара
        name:
          type: string
          description: Наименование товара
        price:
          type: string
          description: Цена товара
        old_price:
          type: string
          description: Старая цена товара
        sizes:
          type: array
          description: Размеры товара (массив)
          items:
            $ref: '#/components/schemas/Size'
        photos:
          type: array
          description: Фотографии товара (массив)
          items:
            $ref: '#/components/schemas/ProductPhoto'
        current_color:
          type: object
          description: Текущий цвет товара
          properties:
            id:
              type: string
              description: Идентификатор цвета
            color:
              type: string
              description: Цвет товара
        colors:
          type: array
          description: Доступные цвета товара (массив)
          items:
            type: object
            properties:
              id:
                type: string
                description: Идентификатор цвета
              color:
                type: string
                description: Цвет товара
        description:
          type: string
          description: Описание товара
        article:
          type: string
          description: Артикул товара
        season:
          type: string
          description: Сезон товара
        quantity:
          type: integer
          example: 5
        cart_id:
          type: integer
          example: 5
    ShopAddress:
      type: array
      description: Доступные адресса магазинов (массив)
      items:
        type: object
        properties:
          name:
            type: string
            description: "Название магазина или улицы"
          point:
            type: string
            description: "Координаты магазина в формате 'широта, долгота'"
    SearchResult:
      type: array
      description: Результаты поиска (массив)
      items:
        type: object
        properties:
          id:
            type: integer
            description: "Идентификатор"
          type:
            type: string
            description: "Тип результата(category, product)"
          name:
            type: string
            description: "Название"
    Events:
        type: array
        description: Список акций
        items:
          type: object
          properties:
            id:
              type: integer
              description: "Идентификатор"
            name:
              type: string
              description: "Название акции"
            color:
              type: string
              description: "Цвет ярлыка акции"
    EventProducts:
      type: array
      description: Список акций и товаров в них
      items:
        type: object
        properties:
          id:
            type: integer
            description: "Идентификатор"
          name:
            type: string
            description: "Название акции"
          color:
            type: string
            description: "Цвет ярлыка акции"
          products:
            type: array
            description: Товары
            items:
              $ref: '#/components/schemas/Product'
    Banner:
      type: array
      description: Список баннеров
      items:
        type: object
        properties:
          id:
            type: integer
            description: "Идентификатор"
          type:
            type: string
            description: "Тип банера"
          time:
            type: string
            description: "Время отображения"
          url:
            type: string
    ColorCard:
      type: object
      properties:
        id:
          type: integer
        color:
          type: string
        sizes:
          type: array
          items:
            $ref: '#/components/schemas/Size'
